apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: platform
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 16.1.2
    chart: kube-prometheus-stack
    helm:
     parameters:
      - name: grafana.adminUser
        value: "admin"
      - name: grafana.adminPassword
        value: "admin"
      - name : grafana.ingress.enabled
        value : "false"
      # - name: grafana.ingress.hosts[0]
      #   value: grafana.example.com
      # - name: grafana.ingress.tls[0].secretName
      #   value: grafana-example-com
      # - name: grafana.ingress.tls[0].hosts[0]
      #   value: grafana-example-com
      - name: grafana.persistence.type
        value: pvc
      - name: grafana.persistence.enabled
        value: "true"
      - name: grafana.persistence.storageClassName
        value: do-block-storage
      - name: grafana.persistence.accessModes[0]
        value: ReadWriteOnce
      - name:  grafana.persistence.size
        value: 20Gi
      - name: grafana.grafana\.ini.auth\.anonymous.enabled
        value: "true"
      - name: grafana.grafana\.ini.security.allow_embedding
        value: "true"
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName
        value: do-block-storage
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.accessModes[0]
        value: ReadWriteOnce
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
        value: 20Gi
      - name: prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.serviceMonitorSelector
        value: ""
      - name: prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.podMonitorSelector
        value: ""
      - name: prometheus.prometheusSpec.ruleSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.ruleSelector
        value: ""
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].sourceLabels[0]
        value: container
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].regex
        value: "(.+)"
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].targetLabel
        value: container_name
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].action
        value: replace
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].sourceLabels[0]
        value: pod
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].regex
        value: "(.+)"
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].targetLabel
        value: pod_name
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].action
        value: replace
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
